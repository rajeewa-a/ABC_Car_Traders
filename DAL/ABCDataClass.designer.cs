#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ABC_Car_Traders")]
	public partial class ABCDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcar(car instance);
    partial void Updatecar(car instance);
    partial void Deletecar(car instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertcar_part(car_part instance);
    partial void Updatecar_part(car_part instance);
    partial void Deletecar_part(car_part instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertsale(sale instance);
    partial void Updatesale(sale instance);
    partial void Deletesale(sale instance);
    #endregion
		
		public ABCDataClassDataContext() : 
				base(global::DAL.Properties.Settings.Default.ABC_Car_TradersConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ABCDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ABCDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ABCDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ABCDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<car> cars
		{
			get
			{
				return this.GetTable<car>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<car_part> car_parts
		{
			get
			{
				return this.GetTable<car_part>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<sale> sales
		{
			get
			{
				return this.GetTable<sale>();
			}
		}
		
		public System.Data.Linq.Table<revenue> revenues
		{
			get
			{
				return this.GetTable<revenue>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.car")]
	public partial class car : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _car_id;
		
		private string _car_make;
		
		private string _car_model;
		
		private int _car_year;
		
		private string _car_price;
		
		private string _car_desc;
		
		private int _car_stock;
		
		private string _car_image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncar_idChanging(int value);
    partial void Oncar_idChanged();
    partial void Oncar_makeChanging(string value);
    partial void Oncar_makeChanged();
    partial void Oncar_modelChanging(string value);
    partial void Oncar_modelChanged();
    partial void Oncar_yearChanging(int value);
    partial void Oncar_yearChanged();
    partial void Oncar_priceChanging(string value);
    partial void Oncar_priceChanged();
    partial void Oncar_descChanging(string value);
    partial void Oncar_descChanged();
    partial void Oncar_stockChanging(int value);
    partial void Oncar_stockChanged();
    partial void Oncar_imageChanging(string value);
    partial void Oncar_imageChanged();
    #endregion
		
		public car()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int car_id
		{
			get
			{
				return this._car_id;
			}
			set
			{
				if ((this._car_id != value))
				{
					this.Oncar_idChanging(value);
					this.SendPropertyChanging();
					this._car_id = value;
					this.SendPropertyChanged("car_id");
					this.Oncar_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_make", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_make
		{
			get
			{
				return this._car_make;
			}
			set
			{
				if ((this._car_make != value))
				{
					this.Oncar_makeChanging(value);
					this.SendPropertyChanging();
					this._car_make = value;
					this.SendPropertyChanged("car_make");
					this.Oncar_makeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_model
		{
			get
			{
				return this._car_model;
			}
			set
			{
				if ((this._car_model != value))
				{
					this.Oncar_modelChanging(value);
					this.SendPropertyChanging();
					this._car_model = value;
					this.SendPropertyChanged("car_model");
					this.Oncar_modelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_year", DbType="Int NOT NULL")]
		public int car_year
		{
			get
			{
				return this._car_year;
			}
			set
			{
				if ((this._car_year != value))
				{
					this.Oncar_yearChanging(value);
					this.SendPropertyChanging();
					this._car_year = value;
					this.SendPropertyChanged("car_year");
					this.Oncar_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_price", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string car_price
		{
			get
			{
				return this._car_price;
			}
			set
			{
				if ((this._car_price != value))
				{
					this.Oncar_priceChanging(value);
					this.SendPropertyChanging();
					this._car_price = value;
					this.SendPropertyChanged("car_price");
					this.Oncar_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_desc", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string car_desc
		{
			get
			{
				return this._car_desc;
			}
			set
			{
				if ((this._car_desc != value))
				{
					this.Oncar_descChanging(value);
					this.SendPropertyChanging();
					this._car_desc = value;
					this.SendPropertyChanged("car_desc");
					this.Oncar_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_stock", DbType="Int NOT NULL")]
		public int car_stock
		{
			get
			{
				return this._car_stock;
			}
			set
			{
				if ((this._car_stock != value))
				{
					this.Oncar_stockChanging(value);
					this.SendPropertyChanging();
					this._car_stock = value;
					this.SendPropertyChanged("car_stock");
					this.Oncar_stockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_image", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string car_image
		{
			get
			{
				return this._car_image;
			}
			set
			{
				if ((this._car_image != value))
				{
					this.Oncar_imageChanging(value);
					this.SendPropertyChanging();
					this._car_image = value;
					this.SendPropertyChanged("car_image");
					this.Oncar_imageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _uid;
		
		private string _email;
		
		private string _password;
		
		private bool _is_admin;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuidChanging(string value);
    partial void OnuidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onis_adminChanging(bool value);
    partial void Onis_adminChanged();
    #endregion
		
		public user()
		{
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_admin", DbType="Bit NOT NULL")]
		public bool is_admin
		{
			get
			{
				return this._is_admin;
			}
			set
			{
				if ((this._is_admin != value))
				{
					this.Onis_adminChanging(value);
					this.SendPropertyChanging();
					this._is_admin = value;
					this.SendPropertyChanged("is_admin");
					this.Onis_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_customer", Storage="_customer", ThisKey="uid", OtherKey="customer_id", IsUnique=true, IsForeignKey=false)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.user = null;
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.user = this;
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.car_part")]
	public partial class car_part : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _part_id;
		
		private string _part_name;
		
		private string _part_desc;
		
		private string _part_image;
		
		private int _part_stock;
		
		private int _part_price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpart_idChanging(int value);
    partial void Onpart_idChanged();
    partial void Onpart_nameChanging(string value);
    partial void Onpart_nameChanged();
    partial void Onpart_descChanging(string value);
    partial void Onpart_descChanged();
    partial void Onpart_imageChanging(string value);
    partial void Onpart_imageChanged();
    partial void Onpart_stockChanging(int value);
    partial void Onpart_stockChanged();
    partial void Onpart_priceChanging(int value);
    partial void Onpart_priceChanged();
    #endregion
		
		public car_part()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int part_id
		{
			get
			{
				return this._part_id;
			}
			set
			{
				if ((this._part_id != value))
				{
					this.Onpart_idChanging(value);
					this.SendPropertyChanging();
					this._part_id = value;
					this.SendPropertyChanged("part_id");
					this.Onpart_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string part_name
		{
			get
			{
				return this._part_name;
			}
			set
			{
				if ((this._part_name != value))
				{
					this.Onpart_nameChanging(value);
					this.SendPropertyChanging();
					this._part_name = value;
					this.SendPropertyChanged("part_name");
					this.Onpart_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_desc", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string part_desc
		{
			get
			{
				return this._part_desc;
			}
			set
			{
				if ((this._part_desc != value))
				{
					this.Onpart_descChanging(value);
					this.SendPropertyChanging();
					this._part_desc = value;
					this.SendPropertyChanged("part_desc");
					this.Onpart_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_image", DbType="VarChar(MAX)")]
		public string part_image
		{
			get
			{
				return this._part_image;
			}
			set
			{
				if ((this._part_image != value))
				{
					this.Onpart_imageChanging(value);
					this.SendPropertyChanging();
					this._part_image = value;
					this.SendPropertyChanged("part_image");
					this.Onpart_imageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_stock", DbType="Int NOT NULL")]
		public int part_stock
		{
			get
			{
				return this._part_stock;
			}
			set
			{
				if ((this._part_stock != value))
				{
					this.Onpart_stockChanging(value);
					this.SendPropertyChanging();
					this._part_stock = value;
					this.SendPropertyChanged("part_stock");
					this.Onpart_stockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_part_price", DbType="Int NOT NULL")]
		public int part_price
		{
			get
			{
				return this._part_price;
			}
			set
			{
				if ((this._part_price != value))
				{
					this.Onpart_priceChanging(value);
					this.SendPropertyChanging();
					this._part_price = value;
					this.SendPropertyChanged("part_price");
					this.Onpart_priceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _customer_id;
		
		private string _name;
		
		private string _address;
		
		private System.DateTime _dob;
		
		private string _contact;
		
		private EntitySet<order> _orders;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OndobChanging(System.DateTime value);
    partial void OndobChanged();
    partial void OncontactChanging(string value);
    partial void OncontactChanged();
    #endregion
		
		public customer()
		{
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="DateTime NOT NULL")]
		public System.DateTime dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contact
		{
			get
			{
				return this._contact;
			}
			set
			{
				if ((this._contact != value))
				{
					this.OncontactChanging(value);
					this.SendPropertyChanging();
					this._contact = value;
					this.SendPropertyChanged("contact");
					this.OncontactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_orders", ThisKey="customer_id", OtherKey="customer_id")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_customer", Storage="_user", ThisKey="customer_id", OtherKey="uid", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.customer = null;
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.customer = this;
						this._customer_id = value.uid;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[order]")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private string _customer_id;
		
		private string _shipping_add;
		
		private System.DateTime _created_at;
		
		private string _telephone;
		
		private string _order_desc;
		
		private string _ship_to;
		
		private string _payment_status;
		
		private string _order_status;
		
		private int _quantity;
		
		private int _price;
		
		private int _total;
		
		private string _order_type;
		
		private EntityRef<customer> _customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void Oncustomer_idChanging(string value);
    partial void Oncustomer_idChanged();
    partial void Onshipping_addChanging(string value);
    partial void Onshipping_addChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    partial void Onorder_descChanging(string value);
    partial void Onorder_descChanged();
    partial void Onship_toChanging(string value);
    partial void Onship_toChanged();
    partial void Onpayment_statusChanging(string value);
    partial void Onpayment_statusChanged();
    partial void Onorder_statusChanging(string value);
    partial void Onorder_statusChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(int value);
    partial void OnpriceChanged();
    partial void OntotalChanging(int value);
    partial void OntotalChanged();
    partial void Onorder_typeChanging(string value);
    partial void Onorder_typeChanged();
    #endregion
		
		public order()
		{
			this._customer = default(EntityRef<customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipping_add", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string shipping_add
		{
			get
			{
				return this._shipping_add;
			}
			set
			{
				if ((this._shipping_add != value))
				{
					this.Onshipping_addChanging(value);
					this.SendPropertyChanging();
					this._shipping_add = value;
					this.SendPropertyChanged("shipping_add");
					this.Onshipping_addChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_desc", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string order_desc
		{
			get
			{
				return this._order_desc;
			}
			set
			{
				if ((this._order_desc != value))
				{
					this.Onorder_descChanging(value);
					this.SendPropertyChanging();
					this._order_desc = value;
					this.SendPropertyChanged("order_desc");
					this.Onorder_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ship_to", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ship_to
		{
			get
			{
				return this._ship_to;
			}
			set
			{
				if ((this._ship_to != value))
				{
					this.Onship_toChanging(value);
					this.SendPropertyChanging();
					this._ship_to = value;
					this.SendPropertyChanged("ship_to");
					this.Onship_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_status", DbType="VarChar(50)")]
		public string payment_status
		{
			get
			{
				return this._payment_status;
			}
			set
			{
				if ((this._payment_status != value))
				{
					this.Onpayment_statusChanging(value);
					this.SendPropertyChanging();
					this._payment_status = value;
					this.SendPropertyChanged("payment_status");
					this.Onpayment_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_status", DbType="VarChar(50)")]
		public string order_status
		{
			get
			{
				return this._order_status;
			}
			set
			{
				if ((this._order_status != value))
				{
					this.Onorder_statusChanging(value);
					this.SendPropertyChanging();
					this._order_status = value;
					this.SendPropertyChanged("order_status");
					this.Onorder_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Int NOT NULL")]
		public int price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Int NOT NULL")]
		public int total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string order_type
		{
			get
			{
				return this._order_type;
			}
			set
			{
				if ((this._order_type != value))
				{
					this.Onorder_typeChanging(value);
					this.SendPropertyChanging();
					this._order_type = value;
					this.SendPropertyChanged("order_type");
					this.Onorder_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_order", Storage="_customer", ThisKey="customer_id", OtherKey="customer_id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._customer_id = value.customer_id;
					}
					else
					{
						this._customer_id = default(string);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sales")]
	public partial class sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sale_id;
		
		private System.DateTime _created_at;
		
		private string _sale_type;
		
		private string _sale_desc;
		
		private int _unit_price;
		
		private int _sale_quantity;
		
		private int _total_amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsale_idChanging(int value);
    partial void Onsale_idChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onsale_typeChanging(string value);
    partial void Onsale_typeChanged();
    partial void Onsale_descChanging(string value);
    partial void Onsale_descChanged();
    partial void Onunit_priceChanging(int value);
    partial void Onunit_priceChanged();
    partial void Onsale_quantityChanging(int value);
    partial void Onsale_quantityChanged();
    partial void Ontotal_amountChanging(int value);
    partial void Ontotal_amountChanged();
    #endregion
		
		public sale()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sale_id
		{
			get
			{
				return this._sale_id;
			}
			set
			{
				if ((this._sale_id != value))
				{
					this.Onsale_idChanging(value);
					this.SendPropertyChanging();
					this._sale_id = value;
					this.SendPropertyChanged("sale_id");
					this.Onsale_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_type", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sale_type
		{
			get
			{
				return this._sale_type;
			}
			set
			{
				if ((this._sale_type != value))
				{
					this.Onsale_typeChanging(value);
					this.SendPropertyChanging();
					this._sale_type = value;
					this.SendPropertyChanged("sale_type");
					this.Onsale_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_desc", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sale_desc
		{
			get
			{
				return this._sale_desc;
			}
			set
			{
				if ((this._sale_desc != value))
				{
					this.Onsale_descChanging(value);
					this.SendPropertyChanging();
					this._sale_desc = value;
					this.SendPropertyChanged("sale_desc");
					this.Onsale_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit_price", DbType="Int NOT NULL")]
		public int unit_price
		{
			get
			{
				return this._unit_price;
			}
			set
			{
				if ((this._unit_price != value))
				{
					this.Onunit_priceChanging(value);
					this.SendPropertyChanging();
					this._unit_price = value;
					this.SendPropertyChanged("unit_price");
					this.Onunit_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_quantity", DbType="Int NOT NULL")]
		public int sale_quantity
		{
			get
			{
				return this._sale_quantity;
			}
			set
			{
				if ((this._sale_quantity != value))
				{
					this.Onsale_quantityChanging(value);
					this.SendPropertyChanging();
					this._sale_quantity = value;
					this.SendPropertyChanged("sale_quantity");
					this.Onsale_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Int NOT NULL")]
		public int total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.revenue")]
	public partial class revenue
	{
		
		private int _year;
		
		private string _month;
		
		private double _cars;
		
		private double _car_parts;
		
		private double _total;
		
		public revenue()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int NOT NULL")]
		public int year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this._year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_month", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string month
		{
			get
			{
				return this._month;
			}
			set
			{
				if ((this._month != value))
				{
					this._month = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cars", DbType="Float NOT NULL")]
		public double cars
		{
			get
			{
				return this._cars;
			}
			set
			{
				if ((this._cars != value))
				{
					this._cars = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_parts", DbType="Float NOT NULL")]
		public double car_parts
		{
			get
			{
				return this._car_parts;
			}
			set
			{
				if ((this._car_parts != value))
				{
					this._car_parts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float NOT NULL")]
		public double total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this._total = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
